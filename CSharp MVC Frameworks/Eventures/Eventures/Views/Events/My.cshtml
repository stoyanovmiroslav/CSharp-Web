@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Common;
@using X.PagedList;

@model IPagedList<OrderEventViewModel>

@{
    ViewData["Title"] = "My";
}

<h1 class="text-center text-torshia">My Events</h1>
<table class="table mx-auto">
    <thead>
        <tr class="row">
            <th class="col-md-1">#</th>
            <th class="col-md-3">Name</th>
            <th class="col-md-3">Start</th>
            <th class="col-md-3">End</th>
            <th class="col-md-2">Tickets</th>
        </tr>
    </thead>
    <tbody>
        @{int row = 0;}
        @for (var i = 0; i < Model.Count(); i++)
        {
            row++;
            <tr class="row">
                <th class="col-md-1">@row</th>
                <td class="col-md-3">@Model[i].EventName</td>
                <td class="col-md-3">@Model[i].EventStart</td>
                <td class="col-md-3">@Model[i].EventEnd</td>
                <td class="col-md-2">@Model[i].TicketsCount</td>
            </tr>
        }
    </tbody>
</table>

<div class="mt-3 d-flex justify-content-around">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("My",
                                            new { page = page }),
                                            new PagedListRenderOptions
                                            {
                                                LiElementClasses = new string[] { "page-item" },
                                                PageClasses = new string[] { "page-link" }
                                            })
</div>